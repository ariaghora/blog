<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machine learning on Aria Ghora&#39;s Blog</title>
    <link>/tags/machine-learning/</link>
    <description>Recent content in machine learning on Aria Ghora&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2020 Aria Ghora Prabono.</copyright>
    <lastBuildDate>Thu, 30 Jan 2020 18:34:50 +0700</lastBuildDate>
    
        <atom:link href="/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Autograd (and some fun stuffs) came to noe</title>
      <link>/posts/20200130-autograd-comes-to-noe/</link>
      <pubDate>Thu, 30 Jan 2020 18:34:50 +0700</pubDate>
      
      <guid>/posts/20200130-autograd-comes-to-noe/</guid>
      <description>Implementing automatic gradient computation, or simply autograd, is pretty challenging to me. Especially when the language that I use (and love) does not really have the tools that I really need, e.g., the multi-dimensional array. Thus, I ended up implementing one. It pretty much functional although the are still many aspect to tune. With noe providing tensor representation, I attempted to implement an automated gradient computation mechanism. Something like what other deep learning frameworks do to perform neural network parameter optimization.</description>
    </item>
    
    <item>
      <title>I am implementing ndarray in pascal</title>
      <link>/posts/20200110-pascal-ndarray/</link>
      <pubDate>Fri, 10 Jan 2020 22:28:27 +0900</pubDate>
      
      <guid>/posts/20200110-pascal-ndarray/</guid>
      <description>I love pascal. But I also love numpy&#39;s ndarray. Most of my project coded in python will most likely use numpy. There is no good solution (at least to me) for realizing ndarray functionality in pascal. Thus, I am trying to implement one on my own (here). So be it.
Meet noe I am not trying to be pretentious by competing with numpy. Heck, nobody is trying to compete with numpy.</description>
    </item>
    
  </channel>
</rss>